{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","intervalId","this","startTimer","prevProps","clockName","props","window","console","debug","clearInterval","setInterval","setState","info","toUTCString","slice","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,WAAa,EALf,uDAOE,WACEC,KAAKC,eART,gCAWE,SAAmBC,GACbA,EAAUC,YAAcH,KAAKI,MAAMD,WACrCE,OAAOC,QAAQC,MAAf,uBAAqCL,EAAUC,UAA/C,eAA+DH,KAAKI,MAAMD,cAbhF,kCAiBE,WACEE,OAAOG,cAAcR,KAAKD,cAlB9B,wBAqBE,WAAc,IAAD,OACXC,KAAKD,WAAaM,OAAOI,aAAY,WACnC,EAAKC,SAAS,CACZb,MAAO,IAAIC,OAEbO,OAAOC,QAAQK,KAAK,EAAKf,MAAMC,MAAMe,cAAcC,OAAO,IAAK,MAC9D,OA3BP,oBA8BE,WACE,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,KAAKI,MAAMD,YAGb,YAED,sBAAMW,UAAU,cAAhB,SACGd,KAAKJ,MAAMC,MAAMe,cAAcC,OAAO,IAAK,YAxCtD,GAA2BE,aCL3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNO,UAAW,UACXkB,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKhB,SAAS,CAAEW,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKd,SAAS,CAAEW,UAAU,OAG5BrB,KAAKsB,QAAUjB,OAAOI,aAAY,WAChC,EAAKC,SAAS,CACZP,UAAWa,QAEZ,QAtBP,kCAyBE,WACEX,OAAOG,cAAcR,KAAKsB,WA1B9B,oBA6BE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCd,KAAKJ,MAAMyB,UAAY,cAAC,EAAD,CAAOlB,UAAWH,KAAKJ,MAAMO,mBAjC7D,GAAyBY,aCbzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.81f9f06c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      window.console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.intervalId);\n  }\n\n  startTimer() {\n    this.intervalId = window.setInterval(() => {\n      this.setState({\n        today: new Date(),\n      });\n      window.console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}